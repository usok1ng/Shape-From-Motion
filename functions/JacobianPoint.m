function J = JacobianPoint(Xi, parameters)
% Induce an equation form Jacobian_derivative.m
X = Xi(1);
Y = Xi(2);
Z = Xi(3);
fx = parameters(1);
fy = parameters(2);
s  = parameters(3);
cx = parameters(4);
cy = parameters(5);
rx = parameters(6);
ry = parameters(7);
rz = parameters(8);
tx = parameters(9);
ty = parameters(10);
tz = parameters(11);

if (0.0 < rx^2+ry^2+rz^2)
    dudX = (s*((rz*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (rx*ry*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - cx*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + fx*((ry^2/(rx^2 + ry^2 + rz^2) + rz^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1))/(tz - X*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Y*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Z*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) + (((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2))*(cx*tz + fx*tx + s*ty + X*(s*((rz*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (rx*ry*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - cx*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + fx*((ry^2/(rx^2 + ry^2 + rz^2) + rz^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) + Y*(cx*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - fx*((rz*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*ry*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + s*((rx^2/(rx^2 + ry^2 + rz^2) + rz^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) + Z*(fx*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - s*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + cx*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1))))/(tz - X*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Y*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Z*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1))^2;
else
    dudX = fx/(Z+tz);
end
if (0.0 < rx^2+ry^2+rz^2)
    dvdX = (((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2))*(Y*(cy*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + fy*((rx^2/(rx^2 + ry^2 + rz^2) + rz^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) - Z*(fy*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - cy*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) + cy*tz + fy*ty - X*(cy*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - fy*((rz*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (rx*ry*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)))))/(tz - X*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Y*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Z*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1))^2 - (cy*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - fy*((rz*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (rx*ry*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)))/(tz - X*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Y*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Z*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1));
else
    dvdX = 0.0;
end
if (0.0 < rx^2+ry^2+rz^2)
    dudY = (cx*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - fx*((rz*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*ry*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + s*((rx^2/(rx^2 + ry^2 + rz^2) + rz^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1))/(tz - X*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Y*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Z*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) - (((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2))*(cx*tz + fx*tx + s*ty + X*(s*((rz*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (rx*ry*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - cx*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + fx*((ry^2/(rx^2 + ry^2 + rz^2) + rz^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) + Y*(cx*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - fx*((rz*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*ry*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + s*((rx^2/(rx^2 + ry^2 + rz^2) + rz^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) + Z*(fx*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - s*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + cx*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1))))/(tz - X*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Y*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Z*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1))^2;
else
    dudY = s/(Z + tz);
end
if (0.0 < rx^2+ry^2+rz^2)
    dvdY = (cy*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + fy*((rx^2/(rx^2 + ry^2 + rz^2) + rz^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1))/(tz - X*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Y*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Z*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) - (((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2))*(Y*(cy*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + fy*((rx^2/(rx^2 + ry^2 + rz^2) + rz^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) - Z*(fy*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - cy*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) + cy*tz + fy*ty - X*(cy*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - fy*((rz*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (rx*ry*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)))))/(tz - X*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Y*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Z*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1))^2;
else
    dvdY = fy/(Z + tz);
end
if (0.0 < rx^2+ry^2+rz^2)
    dudZ = (fx*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - s*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + cx*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1))/(tz - X*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Y*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Z*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) - (((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)*(cx*tz + fx*tx + s*ty + X*(s*((rz*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (rx*ry*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - cx*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + fx*((ry^2/(rx^2 + ry^2 + rz^2) + rz^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) + Y*(cx*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - fx*((rz*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*ry*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + s*((rx^2/(rx^2 + ry^2 + rz^2) + rz^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) + Z*(fx*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - s*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + cx*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1))))/(tz - X*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Y*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Z*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1))^2;
else
    dudZ = cx/(Z + tz) - (Z*cx + X*fx + Y*s + cx*tz + fx*tx + s*ty)/(Z + tz)^2;
end
if (0.0 < rx^2+ry^2+rz^2)
    dvdZ = - (fy*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - cy*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1))/(tz - X*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Y*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Z*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) - (((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)*(Y*(cy*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + fy*((rx^2/(rx^2 + ry^2 + rz^2) + rz^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) - Z*(fy*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - cy*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1)) + cy*tz + fy*ty - X*(cy*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) - fy*((rz*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (rx*ry*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)))))/(tz - X*((ry*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) + (rx*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Y*((rx*sin((rx^2 + ry^2 + rz^2)^(1/2)))/(rx^2 + ry^2 + rz^2)^(1/2) - (ry*rz*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1))/(rx^2 + ry^2 + rz^2)) + Z*((rx^2/(rx^2 + ry^2 + rz^2) + ry^2/(rx^2 + ry^2 + rz^2))*(cos((rx^2 + ry^2 + rz^2)^(1/2)) - 1) + 1))^2;
else
    dvdZ = cy/(Z + tz) - (Z*cy + Y*fy + cy*tz + fy*ty)/(Z + tz)^2;
end
J = [dudX dudY dudZ;
     dvdX dvdY dvdZ];
